{"ast":null,"code":"var _jsxFileName = \"D:\\\\SEMESTER ANTARA PAW\\\\toko-buket-bunga\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Simulasi database users\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: 'Admin',\n    email: 'admin@florist.com',\n    password: 'admin123',\n    role: 'admin',\n    joinDate: '2023-01-01',\n    status: 'active'\n  }, {\n    id: 2,\n    name: 'Budi Santoso',\n    email: 'budi@email.com',\n    password: 'budi123',\n    role: 'admin',\n    joinDate: '2023-09-05',\n    status: 'active'\n  }]);\n  useEffect(() => {\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const register = async userData => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const newUser = {\n        id: Math.max(...users.map(u => u.id)) + 1,\n        ...userData,\n        joinDate: new Date().toISOString().split('T')[0],\n        status: 'active'\n      };\n      setUsers(prevUsers => [...prevUsers, newUser]);\n\n      // Auto login after register\n      const {\n        password,\n        ...userWithoutPassword\n      } = newUser;\n      setCurrentUser(userWithoutPassword);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      return {\n        success: true,\n        user: userWithoutPassword\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Registration failed'\n      };\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      // Simulate API call delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const user = users.find(u => u.email === email && u.password === password);\n      if (user) {\n        const {\n          password,\n          ...userWithoutPassword\n        } = user;\n        setCurrentUser(userWithoutPassword);\n        localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n        return {\n          success: true,\n          user: userWithoutPassword\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Invalid email or password'\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Login failed'\n      };\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n    users\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"8WrQx7t0IUcauG6+MoI9EVobG3U=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","users","setUsers","id","name","email","password","role","joinDate","status","savedUser","localStorage","getItem","JSON","parse","register","userData","Promise","resolve","setTimeout","newUser","Math","max","map","u","Date","toISOString","split","prevUsers","userWithoutPassword","setItem","stringify","success","user","error","login","find","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SEMESTER ANTARA PAW/toko-buket-bunga/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Simulasi database users\r\n  const [users, setUsers] = useState([\r\n    { \r\n      id: 1, \r\n      name: 'Admin', \r\n      email: 'admin@florist.com', \r\n      password: 'admin123', \r\n      role: 'admin', \r\n      joinDate: '2023-01-01', \r\n      status: 'active' \r\n    },\r\n    { \r\n      id: 2, \r\n      name: 'Budi Santoso', \r\n      email: 'budi@email.com', \r\n      password: 'budi123', \r\n      role: 'admin', \r\n      joinDate: '2023-09-05', \r\n      status: 'active' \r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in from localStorage\r\n    const savedUser = localStorage.getItem('currentUser');\r\n    if (savedUser) {\r\n      setCurrentUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const newUser = {\r\n        id: Math.max(...users.map(u => u.id)) + 1,\r\n        ...userData,\r\n        joinDate: new Date().toISOString().split('T')[0],\r\n        status: 'active'\r\n      };\r\n      \r\n      setUsers(prevUsers => [...prevUsers, newUser]);\r\n      \r\n      // Auto login after register\r\n      const { password, ...userWithoutPassword } = newUser;\r\n      setCurrentUser(userWithoutPassword);\r\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\r\n      \r\n      return { success: true, user: userWithoutPassword };\r\n    } catch (error) {\r\n      return { success: false, error: 'Registration failed' };\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const user = users.find(u => u.email === email && u.password === password);\r\n      \r\n      if (user) {\r\n        const { password, ...userWithoutPassword } = user;\r\n        setCurrentUser(userWithoutPassword);\r\n        localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\r\n        return { success: true, user: userWithoutPassword };\r\n      } else {\r\n        return { success: false, error: 'Invalid email or password' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('currentUser');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    register,\r\n    login,\r\n    logout,\r\n    users\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}